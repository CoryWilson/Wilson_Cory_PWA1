WDD244-L
ACTIVITIES
PEOPLE
logo
1
CORY
Programming for Web Applications I - Lecture
WITH SCOTT WAINMAN
Activities / Week #4 :: { Homework } - FINAL EXAM (4h)
Week #4 :: { Homework } - FINAL EXAM (4h)
Assignment

26
JUN
STATUS
Overview
Downloads
Submit
Comments
Overview
FINAL EXAM - (Practical)
If you accept this challenge.... You will take a copy of your Mid Term and refactor it to implement a “Constructor" (for the name, GPA, and date) and a "Prototype" (which will be used to determine the student's average GPA). You will demonstrate your ability to add a new student object to the array of students, using the Constructor. As well as, demonstrate your ability to calculate the average GPA using a "Prototype" method.

OBJECTIVES & OUTCOMES

Successful completion of this activity will show that you can:
Assess your skills and comprehension of the materials taught up to this point. (Objects, Arrays, Functions, Conditionals, Methods, Scoping, Debugging, DOM, regular expressions, constructors, and prototypes).
Assess your ability to analyze existing code and refactor it.
Assess your ability to logically separate code and implement a Constructor.
Assess your ability to logically separate code and implement a Prototype.
Employ solid craftsmanship by paying attention to programming details such as, proper line spacing and indents, and detailed comments throughout your deliverable.
LEVEL OF EFFORT

This activity should take approximately 240m to complete. It will require:

0m Research
15m Prep & Delivery
225m Work
If you find that this activity takes you significantly less or more time than this estimate, please contact me for guidance.

READING & RESOURCES

Final - Rubric (necessary)

This rubric outlines the points for the assignment. Make sure you check off each one as done before submitting your assignment.

Assignment Files (necessary)

You will use a copy of your Mid Term for this challenge.

goal11_FINAL Demo (necessary) Approx. Duration: 06:23m

This screencast reviews the requirements for the FINAL Assignment.


Getting Started:
This FINAL is OPEN… to a point.
There will only be 2 restrictions.
1. You will work on your own to accomplish the programming tasks in this FINAL.
2. You may ask for help, guidance and direction from others (other students, Lab Instructor(s), or Course Director), but they may not help with coding, nor share code.
SEE NOTE IN DELIVERABLE: IF this is found in your GIT REPO you will be deducted points!!!
In a directory outside of your GIT REPO you will need to create a directory entitled "goal11_assign_FINAL". This is where all your assignment development files will reside.
Make a copy of your Midterm files and put them in the directory "Wk4/goal11_assign_FINAL/". This is where all your assignment development files will reside & be graded.
In addition to your main.js file, you will create a file entitled "js/studentObject.js". This is where your Constructor and Prototype will be stored. You will need to create a script tag for this file in your .html file.Using JavaScript comments, place your name, date and assignment at the top of ALL files.
Make sure you adhere to proper folder constructs, if applicable (css, images, js, etc)
Please watch the associated screencast that shows the finished assignment and explains the requirements. The link for this screencast is in the "Reading and Resources" section above.


Criteria:
To obtain full credit on the assignment your submission should match the functionality of the demonstration. The following criteria must be adhered to and you must satisfy all items on this assignment's rubric.
You will refactor your Midterm files using the following updates documented below. The items you are adding / changing to this refactoring process are as follows:
1. add and use a Constructor,
2. add and use a Prototype:
(Same as the Midterm) If you don't already have one, create an empty students array.
(NEW for the final) Replace the student objects you created in the Mid Term, with a call to the Constructor. The Constructor will create each student object, you will then need to programmatically insert the student object into the student's array. An example of your call to the Constructor can be as follows:
new Student('James Bond', '123 Test Dr', 'Orlando', 'Florida', [2.5, 4.0, 2.2], new Date());

Just like the Midterm, you will first populate the array of students with at least 2 objects of information. Each student object will need to be created using the constructor.
(Same as the Midterm) Console.log ALL the information in ALL objects on 4 lines.
1. name
2. address
3. GPA
4. date
Example:
1. Name: James Bond
2. Address: 123 Test Dr, Orlando, Florida
3. GPA: [2.5, 3.5, 4.0]
4. Date: 05/02/13
(NEW for the final) Add a new object (using a Constructor) to the array of student objects above. Use the same technique used above to add the new object.
(Same as the Midterm) Console.log ALL the information in ALL objects on 4 lines. This should display with the new object that was just added directly above. Use the same output display as the previous console.log
(NEW for the final) Before displaying the “Average GPA” using the innerHTML from the Mid Term, a Prototype method will be used to calculate each student’s Average GPA and return the results.
There should not be any duplicate code in the main.js or the studentObjects.js file. If there is, you will need to refactor the code by creating a function for the duplicate code and then call the function when it is needed.
PAY ATTENTION TO THE DETAILS OF YOUR CODE:
1. All global variables should be located at the very top of the program.
2. All function calls should be at the bottom of the program.
3. Make sure to put detailed comments throughout your code.
4. Make sure you are using the proper line spacing in your program(i.e. there should only be one space between code where a natural break occurs like between the global variables and the functions, between functions, and between functions and the function calls at the bottom of the program.
Extra Credit: Create a function that will validate the “basic” GPA format ‘#.##’. This function will need to run before the first console.log displays the information. If a GPA does not meet the format, just stop the program and display a console.log error message. You NEED TO use regular expression for this extra credit.  GOOD LUCK!!!
DELIVERABLES

THIS IS AN optional ASSESSMENT ASSIGNMENT THAT WILL BE TURNED INTO FSO. DO NOT PUT THE FILES INTO YOUR GIT REPO. Name your file lastName_firstName_FINAL.zip.

Please fill a quick survey below...thanks!


Downloads
There are no downloads for this assignment.
Submit
 DRAG & DROP Select File(s)

I agree to the terms of the Academic Dishonesty Policy and certify that the work submitted is my own.

Comments
This thread is between you and your instructor only. Your classmates won't see this conversation.

©2014 Full Sail University Terms of Use Connect | MyStuff | Student Email | Library | FSO Resources | FSO Support Fact Card | Technical Support
